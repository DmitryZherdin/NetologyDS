# -*- coding: utf-8 -*-
"""DZ2_DS_management.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jtRmQ-3kG6uEn39ypuESxgj7yorf9iZW

Импортируем необходимые библиотеки
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sripts2 import *
from matplotlib import cm
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.neighbors import LocalOutlierFactor
from sklearn.ensemble import RandomForestClassifier, IsolationForest


"""Загружаем данные"""

df = pd.read_csv('data/winequalityN.csv')

"""Заполняем пропуски"""

df.isna().sum()

df_fillna = df.copy()
col_with_NA = df.columns[df.isna().any()].tolist()
for column in col_with_NA:
  Fill_NA_LinReg(df_fillna, column)

df_fillna.isna().sum()

df_white = df_fillna.loc[df_fillna['type'] == 'white'].drop('type', axis = 1).copy().reset_index(drop = True)
df_red = df_fillna.loc[df_fillna['type'] == 'red'].drop('type', axis = 1).copy().reset_index(drop = True)


"""Распределение признаков для красного и белого вин различно, целесообразно разделить датасет по типу вина."""

df_red_outliners = outliers_LogReg(df_red)
df_white_outliners = outliers_LogReg(df_white)

"""Строим модель и определяем качество обучения"""

model_test(X = df_red_outliners.drop(['quality'], axis = 1), y = df_red_outliners['quality'])

model_test(X = df_white_outliners.drop(['quality'], axis = 1), y = df_white_outliners['quality'])

model_test(X = df_red.drop(['quality'], axis = 1), y = df_red['quality'])

model_test(X = df_white.drop(['quality'], axis = 1), y = df_white['quality'])

model_test(X = df_fillna.drop(['type' ,'quality'], axis = 1), y = df_fillna['quality'])

